generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Instrument {
  id                   String                @id @default(cuid())
  name                 String                @db.VarChar(255)
  typeOfInstrument     String                @db.VarChar(255)
  detail               String                @db.VarChar(2047)
  spec        String @db.VarChar(255)
  avalibility          InstrumentAvalibility
  picLink              String                @db.VarChar(255)
  questionSet          String?
  application          String
  documentLinkPath     String
  isDeleted            Boolean
  isScientistRequired  Boolean
  responsibleHistories ResponsibleHistory?
  services             ServiceDetail[]
}

model ResponsibleHistory {
  instrumentId                String            @unique @db.VarChar(255)
  responsiblePersonId         String            @unique @db.VarChar(255)
  startDT                     DateTime
  endDT                       DateTime?
  id                          String            @id @default(cuid())
  referencedInstrument        Instrument        @relation(fields: [instrumentId], references: [id])
  referencedResponsiblePerson ResponsiblePerson @relation(fields: [responsiblePersonId], references: [id])
}

model ServiceDetail {
  standardPriceForPublicOrg  Float
  standardPriceForPrivateOrg Float
  standardPriceForInternal   Float
  name                       String     @db.VarChar(255)
  unitCount                  String     @db.VarChar(6)
  isDeleted                  Boolean
  instrumentId               String     @db.VarChar(255)
  serviceId                  String     @default(cuid())
  referencedInstrument       Instrument @relation(fields: [instrumentId], references: [id])

  @@id([serviceId, instrumentId])
}

model ResponsiblePerson {
  id                 String              @id @default(cuid())
  name               String              @db.VarChar(255)
  surname            String              @db.VarChar(255)
  email              String?              @db.VarChar(255)
  phone              String?              @db.VarChar(255)
  propositionalTitle String?              @db.VarChar(255)
  picLink              String                @db.VarChar(255)
  isResigned         Boolean
  respondedHistory   ResponsibleHistory?
}

model Staff {
  id        String  @id @default(cuid())
  name      String  @db.VarChar(255)
  surname   String  @db.VarChar(255)
  email     String  @db.VarChar(255)
  phone     String  @db.VarChar(255)
  isDeleted Boolean
}

model Customer {
  id          String  @id @default(cuid())
  name        String  @db.VarChar(255)
  surname     String  @db.VarChar(255)
  proposition String  @db.VarChar(255)
  workplace   String  @db.VarChar(255)
  career      String  @db.VarChar(255)
  isDeleted   Boolean
}

enum typeOfCust {
  inHouse
  government
  private
}

enum InstrumentAvalibility {
  AVAILABLE
  UNAVAILABLE
  NOT_READY_FOR_USE
}
